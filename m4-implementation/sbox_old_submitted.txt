    eor    r0, r12, r14   //Exec MASK3 = MASK1 ^ MASK2 into r0
    and    r1, r12,  r0   //Exec MASK1AND3 = MASK1 & MASK3 into r1
    eor    r2,  r1,  r0   //Exec MASK1AND3XOR3 = MASK1AND3 ^ MASK3 into r2
    eor    r3,  r1, r12   //Exec MASK1AND3XOR1 = MASK1AND3 ^ MASK1 into r3
    and    r1, r14,  r0   //Exec MASK2AND3 = MASK2 & MASK3 into r1
    str.w  r3, [sp, #152] //Store r3/MASK1AND3XOR1 on stack
    eor    r3,  r1,  r0   //Exec MASK2AND3XOR3 = MASK2AND3 ^ MASK3 into r3
    eor    r1,  r1, r14   //Exec MASK2AND3XOR2 = MASK2AND3 ^ MASK2 into r1
    str.w  r3, [sp, #148] //Store r3/MASK2AND3XOR3 on stack
    and    r3, r12, r14   //Exec MASK1AND2 = MASK1 & MASK2 into r3
    str.w  r5, [sp, #144] //Store r5/i6 on stack
    eor    r5,  r3, r12   //Exec MASK1AND2XOR1 = MASK1AND2 ^ MASK1 into r5
    eor    r3,  r3, r14   //Exec MASK1AND2XOR2 = MASK1AND2 ^ MASK2 into r3
    str.w  r3, [sp, #140] //Store r3/MASK1AND2XOR2 on stack
    eor    r3,  r4,  r7   //Exec T1_0 = i7 ^ i4 into r3
    str.w  r5, [sp, #136] //Store r5/MASK1AND2XOR1 on stack
    eor    r5,  r4,  r9   //Exec T2_0 = i7 ^ i2 into r5
    eor    r4,  r4, r10   //Exec T3_0 = i7 ^ i1 into r4
    str.w  r7, [sp, #132] //Store r7/i4 on stack
    eor    r7,  r7,  r9   //Exec T4_0 = i4 ^ i2 into r7
    str.w  r4, [sp, #128] //Store r4/T3_0 on stack
    eor    r4,  r4,  r7   //Exec T13_0 = T3_0 ^ T4_0 into r4
    str.w  r9, [sp, #124] //Store r9/i2 on stack
    eor    r9,  r4, r12   //Exec ht13_0 = T13_0 ^ MASK1 into r9
    str.w  r9, [sp, #120] //Store r9/ht13_0 on stack
    and    r9,  r0,  r9   //Exec XM55_04 = MASK3 & ht13_0 into r9
    eor    r9,  r9,  r1   //Exec XM55_05 = XM55_04 ^ MASK2AND3XOR2 into r9
    eor    r9,  r9,  r0   //Exec XM55_06 = XM55_05 ^ MASK3 into r9
    str.w  r9, [sp, #116] //Store r9/XM55_06 on stack
    and    r9,  r0,  r7   //Exec XM12_04 = MASK3 & T4_0 into r9
    eor    r9,  r9,  r1   //Exec XM12_05 = XM12_04 ^ MASK2AND3XOR2 into r9
    eor    r9,  r9,  r0   //Exec XM12_06 = XM12_05 ^ MASK3 into r9
    eor    r8,  r8, r10   //Exec T5_0 = i3 ^ i1 into r8
    str.w r10, [sp, #112] //Store r10/i1 on stack
    eor   r10,  r3,  r8   //Exec T6_0 = T1_0 ^ T5_0 into r10
    str.w  r9, [sp, #108] //Store r9/XM12_06 on stack
    and    r9, r10,  r4   //Exec XM1_00 = T6_0 & T13_0 into r9
    str.w  r7, [sp, #104] //Store r7/T4_0 on stack
    and    r7, r10,  r0   //Exec XM1_01 = T6_0 & MASK3 into r7
    eor    r7,  r7,  r0   //Exec XM1_02 = XM1_01 ^ MASK3 into r7
    eor    r7,  r9,  r7   //Exec XM1_03 = XM1_00 ^ XM1_02 into r7
    eor    r9, r11, r10   //Exec T8_0 = i0 ^ T6_0 into r9
    str.w  r9, [sp, #100] //Store r9/T8_0 on stack
    eor    r9,  r9, r12   //Exec ht8_0 = T8_0 ^ MASK1 into r9
    str.w  r9, [sp, #96 ] //Store r9/ht8_0 on stack
    and    r9,  r0,  r9   //Exec XM2_04 = MASK3 & ht8_0 into r9
    eor    r9,  r9,  r1   //Exec XM2_05 = XM2_04 ^ MASK2AND3XOR2 into r9
    eor    r9,  r9,  r0   //Exec XM2_06 = XM2_05 ^ MASK3 into r9
    and    r4, r12,  r4   //Exec XM1_04 = MASK1 & T13_0 into r4
    eor    r4,  r4,  r2   //Exec XM1_05 = XM1_04 ^ MASK1AND3XOR3 into r4
    eor    r4,  r4, r12   //Exec XM1_06 = XM1_05 ^ MASK1 into r4
    eor    r4,  r7,  r4   //Exec M1_0 = XM1_03 ^ XM1_06 into r4
    ldr.w  r7, [sp, #144] //Load i6 into r7
    str.w  r9, [sp, #92 ] //Store r9/XM2_06 on stack
    eor    r9,  r7,  r6   //Exec T7_0 = i6 ^ i5 into r9
    str.w  r2, [sp, #88 ] //Store r2/MASK1AND3XOR3 on stack
    eor    r2, r10,  r9   //Exec T10_0 = T6_0 ^ T7_0 into r2
    str.w  r1, [sp, #84 ] //Store r1/MASK2AND3XOR2 on stack
    eor    r1,  r5,  r2   //Exec T24_0 = T2_0 ^ T10_0 into r1
    eor    r1,  r1, r12   //Exec ht24_0 = T24_0 ^ MASK1 into r1
    str.w  r1, [sp, #80 ] //Store r1/ht24_0 on stack
    and    r1,  r2,  r5   //Exec XM14_00 = T10_0 & T2_0 into r1
    str.w  r5, [sp, #76 ] //Store r5/T2_0 on stack
    and    r5,  r2, r12   //Exec XM14_01 = T10_0 & MASK1 into r5
    eor    r5,  r5, r12   //Exec XM14_02 = XM14_01 ^ MASK1 into r5
    eor    r1,  r1,  r5   //Exec XM14_03 = XM14_00 ^ XM14_02 into r1
    and    r5,  r2,  r0   //Exec XM54_01 = T10_0 & MASK3 into r5
    eor    r5,  r5,  r0   //Exec XM54_02 = XM54_01 ^ MASK3 into r5
    str.w  r5, [sp, #72 ] //Store r5/XM54_02 on stack
    eor    r5, r11,  r9   //Exec T9_0 = i0 ^ T7_0 into r5
    str.w  r2, [sp, #68 ] //Store r2/T10_0 on stack
    eor    r2,  r5, r14   //Exec ht9_0 = T9_0 ^ MASK2 into r2
    str.w  r2, [sp, #64 ] //Store r2/ht9_0 on stack
    ldr.w  r2, [sp, #124] //Load i2 into r2
    eor    r7,  r7,  r2   //Exec T11_0 = i6 ^ i2 into r7
    str.w  r1, [sp, #144] //Store r1/XM14_03 on stack
    eor    r1, r10,  r7   //Exec T14_0 = T6_0 ^ T11_0 into r1
    eor    r1,  r1,  r4   //Exec M3_0 = T14_0 ^ M1_0 into r1
    eor    r7,  r7, r12   //Exec ht11_0 = T11_0 ^ MASK1 into r7
    eor    r7,  r8,  r7   //Exec T15_0 = T5_0 ^ ht11_0 into r7
    str.w  r4, [sp, #60 ] //Store r4/M1_0 on stack
    and    r4,  r7,  r3   //Exec XM11_00 = T15_0 & T1_0 into r4
    str.w  r7, [sp, #56 ] //Store r7/T15_0 on stack
    and    r7,  r7,  r0   //Exec XM11_01 = T15_0 & MASK3 into r7
    eor    r7,  r7,  r0   //Exec XM11_02 = XM11_01 ^ MASK3 into r7
    eor    r4,  r4,  r7   //Exec XM11_03 = XM11_00 ^ XM11_02 into r4
    str.w r10, [sp, #52 ] //Store r10/T6_0 on stack
    str.w  r1, [sp, #44 ] //Store r1/M3_0 on stack
    and    r7,  r0, r10   //Exec XM46_04 = MASK3 & T6_0 into r7
    ldr.w r10, [sp, #152] //Load MASK1AND3XOR1 into r10
    ldr.w  r1, [sp, #84 ] //Load MASK2AND3XOR2 into r1
    eor    r7,  r7, r10   //Exec XM46_05 = XM46_04 ^ MASK1AND3XOR1 into r7
    eor    r7,  r7,  r0   //Exec XM46_06 = XM46_05 ^ MASK3 into r7
    eor    r2,  r6,  r2   //Exec T12_0 = i5 ^ i2 into r2
    eor    r6,  r8,  r2   //Exec T16_0 = T5_0 ^ T12_0 into r6
    eor    r8,  r5,  r6   //Exec T17_0 = T9_0 ^ T16_0 into r8
    str.w  r7, [sp, #124] //Store r7/XM46_06 on stack
    eor    r7,  r8, r12   //Exec ht17_0 = T17_0 ^ MASK1 into r7
    str.w  r8, [sp, #48 ] //Store r8/T17_0 on stack
    and    r8,  r0,  r8   //Exec XM51_04 = MASK3 & T17_0 into r8
    eor    r8,  r8,  r1   //Exec XM51_05 = XM51_04 ^ MASK2AND3XOR2 into r8
    eor    r8,  r8,  r0   //Exec XM51_06 = XM51_05 ^ MASK3 into r8
    str.w  r8, [sp, #40 ] //Store r8/XM51_06 on stack
    ldr.w  r8, [sp, #128] //Load T3_0 into r8
    str.w  r5, [sp, #36 ] //Store r5/T9_0 on stack
    eor    r5,  r8,  r6   //Exec T26_0 = T3_0 ^ T16_0 into r5
    str.w  r4, [sp, #32 ] //Store r4/XM11_03 on stack
    and    r4,  r6,  r8   //Exec XM6_00 = T16_0 & T3_0 into r4
    str.w  r6, [sp, #28 ] //Store r6/T16_0 on stack
    and    r6,  r6, r12   //Exec XM6_01 = T16_0 & MASK1 into r6
    eor    r6,  r6, r12   //Exec XM6_02 = XM6_01 ^ MASK1 into r6
    eor    r4,  r4,  r6   //Exec XM6_03 = XM6_00 ^ XM6_02 into r4
    eor    r2,  r3,  r2   //Exec T27_0 = T1_0 ^ T12_0 into r2
    str.w  r2, [sp, #24 ] //Store r2/T27_0 on stack
    eor    r6,  r2, r12   //Exec ht27_0 = T27_0 ^ MASK1 into r6
    ldr.w  r2, [sp, #104] //Load T4_0 into r2
    and    r2,  r6,  r2   //Exec XM12_00 = ht27_0 & T4_0 into r2
    and    r6,  r6, r14   //Exec XM12_01 = ht27_0 & MASK2 into r6
    eor    r6,  r6, r14   //Exec XM12_02 = XM12_01 ^ MASK2 into r6
    eor    r2,  r2,  r6   //Exec XM12_03 = XM12_00 ^ XM12_02 into r2
    ldr.w  r6, [sp, #108] //Load XM12_06 into r6
    eor    r2,  r2,  r6   //Exec M12_0 = XM12_03 ^ XM12_06 into r2
    and    r6,  r0,  r8   //Exec XM6_04 = MASK3 & T3_0 into r6
    eor    r6,  r6, r10   //Exec XM6_05 = XM6_04 ^ MASK1AND3XOR1 into r6
    eor    r6,  r6,  r0   //Exec XM6_06 = XM6_05 ^ MASK3 into r6
    eor    r4,  r4,  r6   //Exec M6_0 = XM6_03 ^ XM6_06 into r4
    eor    r5,  r5,  r4   //Exec M8_0 = T26_0 ^ M6_0 into r5
    ldr.w  r6, [sp, #132] //Load i4 into r6
    eor    r6,  r6, r11   //Exec T18_0 = i4 ^ i0 into r6
    eor    r6,  r6, r12   //Exec ht18_0 = T18_0 ^ MASK1 into r6
    eor    r6,  r9,  r6   //Exec T19_0 = T7_0 ^ ht18_0 into r6
    eor    r8,  r3,  r6   //Exec T20_0 = T1_0 ^ T19_0 into r8
    eor   r10,  r8,  r7   //Exec T25_0 = T20_0 ^ ht17_0 into r10
    str.w r10, [sp, #132] //Store r10/T25_0 on stack
    and   r10,  r8,  r7   //Exec XM9_00 = T20_0 & ht17_0 into r10
    str.w  r5, [sp, #108] //Store r5/M8_0 on stack
    and    r5,  r8,  r0   //Exec XM9_01 = T20_0 & MASK3 into r5
    eor    r5,  r5,  r0   //Exec XM9_02 = XM9_01 ^ MASK3 into r5
    eor    r5, r10,  r5   //Exec XM9_03 = XM9_00 ^ XM9_02 into r5
    and   r10,  r0,  r8   //Exec XM60_04 = MASK3 & T20_0 into r10
    eor   r10, r10,  r1   //Exec XM60_05 = XM60_04 ^ MASK2AND3XOR2 into r10
    eor   r10, r10,  r0   //Exec XM60_06 = XM60_05 ^ MASK3 into r10
    str.w r10, [sp, #20 ] //Store r10/XM60_06 on stack
    eor   r10,  r6, r14   //Exec ht19_0 = T19_0 ^ MASK2 into r10
    str.w  r8, [sp, #16 ] //Store r8/T20_0 on stack
    and    r8, r11,  r6   //Exec XM4_00 = i0 & T19_0 into r8
    str.w r10, [sp, #12 ] //Store r10/ht19_0 on stack
    and    r6, r14,  r6   //Exec XM4_04 = MASK2 & T19_0 into r6
    ldr.w r10, [sp, #136] //Load MASK1AND2XOR1 into r10
    eor    r6,  r6, r10   //Exec XM4_05 = XM4_04 ^ MASK1AND2XOR1 into r6
    eor    r6,  r6, r14   //Exec XM4_06 = XM4_05 ^ MASK2 into r6
    str.w  r6, [sp, #8  ] //Store r6/XM4_06 on stack
    and    r7, r14,  r7   //Exec XM9_04 = MASK2 & ht17_0 into r7
    ldr.w  r6, [sp, #148] //Load MASK2AND3XOR3 into r6
    eor    r7,  r7,  r6   //Exec XM9_05 = XM9_04 ^ MASK2AND3XOR3 into r7
    eor    r7,  r7, r14   //Exec XM9_06 = XM9_05 ^ MASK2 into r7
    eor    r5,  r5,  r7   //Exec M9_0 = XM9_03 ^ XM9_06 into r5
    eor    r4,  r5,  r4   //Exec M10_0 = M9_0 ^ M6_0 into r4
    and    r5, r12,  r3   //Exec XM11_04 = MASK1 & T1_0 into r5
    str.w  r3, [sp, #4  ] //Store r3/T1_0 on stack
    eor    r5,  r5, r12   //Exec XM11_06 = XM11_05 ^ MASK1 into r5
    ldr.w  r7, [sp, #88 ] //Load MASK1AND3XOR3 into r7
    ldr.w  r3, [sp, #32 ] //Load XM11_03 into r3
    eor    r5,  r5,  r7   //Exec XM11_05 = XM11_04 ^ MASK1AND3XOR3 into r5
    eor    r3,  r3,  r5   //Exec M11_0 = XM11_03 ^ XM11_06 into r3
    eor    r2,  r2,  r3   //Exec M13_0 = M12_0 ^ M11_0 into r2
    ldr.w  r5, [sp, #112] //Load i1 into r5
    eor    r5,  r5, r11   //Exec T21_0 = i1 ^ i0 into r5
    eor    r5,  r9,  r5   //Exec T22_0 = T7_0 ^ T21_0 into r5
    eor    r9,  r9, r11   //Recompute T9_0 = T7_0 ^ i0 into r9
    str.w r11, [sp, #32 ] //Store r11/i0 on stack
    and    r6,  r5,  r9   //Exec XM7_00 = T22_0 & T9_0 into r6
    ldr.w  r7, [sp, #76 ] //Load T2_0 into r7
    ldr.w r11, [sp, #96 ] //Load ht8_0 into r11
    str.w  r8, [sp, #112] //Store r8/XM4_00 on stack
    eor    r8,  r7,  r5   //Exec T23_0 = T2_0 ^ T22_0 into r8
    and   r11,  r8, r11   //Exec XM2_00 = T23_0 & ht8_0 into r11
    str.w  r8, [sp, #96 ] //Store r8/T23_0 on stack
    and    r8,  r8, r14   //Exec XM2_01 = T23_0 & MASK2 into r8
    eor    r8,  r8, r14   //Exec XM2_02 = XM2_01 ^ MASK2 into r8
    eor    r8, r11,  r8   //Exec XM2_03 = XM2_00 ^ XM2_02 into r8
    ldr.w r11, [sp, #92 ] //Load XM2_06 into r11
    eor    r8,  r8, r11   //Exec M2_0 = XM2_03 ^ XM2_06 into r8
    ldr.w r11, [sp, #44 ] //Load M3_0 into r11
    eor    r8, r11,  r8   //Exec M16_0 = M3_0 ^ M2_0 into r8
    eor    r8,  r8,  r2   //Exec M20_0 = M16_0 ^ M13_0 into r8
    and   r11,  r5, r12   //Exec XM7_01 = T22_0 & MASK1 into r11
    eor   r11, r11, r12   //Exec XM7_02 = XM7_01 ^ MASK1 into r11
    eor    r6,  r6, r11   //Exec XM7_03 = XM7_00 ^ XM7_02 into r6
    and    r9, r14,  r9   //Exec XM7_04 = MASK2 & T9_0 into r9
    eor    r9,  r9, r10   //Exec XM7_05 = XM7_04 ^ MASK1AND2XOR1 into r9
    eor    r9,  r9, r14   //Exec XM7_06 = XM7_05 ^ MASK2 into r9
    eor    r6,  r6,  r9   //Exec M7_0 = XM7_03 ^ XM7_06 into r6
    ldr.w  r9, [sp, #108] //Load M8_0 into r9
    ldr.w r11, [sp, #144] //Load XM14_03 into r11
    eor    r6,  r9,  r6   //Exec M18_0 = M8_0 ^ M7_0 into r6
    eor    r2,  r6,  r2   //Exec M22_0 = M18_0 ^ M13_0 into r2
    and    r6,  r2,  r8   //Exec XM25_00 = M22_0 & M20_0 into r6
    and    r9,  r2,  r0   //Exec XM25_01 = M22_0 & MASK3 into r9
    eor    r9,  r9,  r0   //Exec XM25_02 = XM25_01 ^ MASK3 into r9
    eor    r6,  r6,  r9   //Exec XM25_03 = XM25_00 ^ XM25_02 into r6
    and    r9, r14,  r7   //Exec XM14_04 = MASK2 & T2_0 into r9
    eor    r9,  r9, r10   //Exec XM14_05 = XM14_04 ^ MASK1AND2XOR1 into r9
    eor    r9,  r9, r14   //Exec XM14_06 = XM14_05 ^ MASK2 into r9
    eor    r9, r11,  r9   //Exec M14_0 = XM14_03 ^ XM14_06 into r9
    eor    r3,  r9,  r3   //Exec M15_0 = M14_0 ^ M11_0 into r3
    eor    r4,  r4,  r3   //Exec M19_0 = M10_0 ^ M15_0 into r4
    ldr.w  r9, [sp, #132] //Load T25_0 into r9
    eor    r4,  r4,  r9   //Exec M23_0 = M19_0 ^ T25_0 into r4
    eor    r9,  r2,  r4   //Exec M24_0 = M22_0 ^ M23_0 into r9
    and   r11,  r9,  r0   //Exec XM30_01 = M24_0 & MASK3 into r11
    eor   r11, r11,  r0   //Exec XM30_02 = XM30_01 ^ MASK3 into r11
    eor   r10,  r4, r12   //Exec hm23_0 = M23_0 ^ MASK1 into r10
    str.w  r5, [sp, #144] //Store r5/T22_0 on stack
    and    r5,  r8, r10   //Exec XM31_00 = M20_0 & hm23_0 into r5
    and   r10,  r0, r10   //Exec XM31_04 = MASK3 & hm23_0 into r10
    eor   r10, r10,  r1   //Exec XM31_05 = XM31_04 ^ MASK2AND3XOR2 into r10
    and    r1,  r7,  r0   //Exec XM63_01 = T2_0 & MASK3 into r1
    eor    r1,  r1,  r0   //Exec XM63_02 = XM63_01 ^ MASK3 into r1
    str.w  r1, [sp, #132] //Store r1/XM63_02 on stack
    eor   r10, r10,  r0   //Exec XM31_06 = XM31_05 ^ MASK3 into r10
    ldr.w  r1, [sp, #32 ] //Load i0 into r1
    ldr.w  r7, [sp, #112] //Load XM4_00 into r7
    and    r1,  r1, r12   //Exec XM4_01 = i0 & MASK1 into r1
    eor    r1,  r1, r12   //Exec XM4_02 = XM4_01 ^ MASK1 into r1
    str.w r10, [sp, #108] //Store r10/XM31_06 on stack
    eor    r1,  r7,  r1   //Exec XM4_03 = XM4_00 ^ XM4_02 into r1
    ldr.w  r7, [sp, #8  ] //Load XM4_06 into r7
    eor    r1,  r1,  r7   //Exec M4_0 = XM4_03 ^ XM4_06 into r1
    ldr.w  r7, [sp, #60 ] //Load M1_0 into r7
    eor    r1,  r1,  r7   //Exec M5_0 = M4_0 ^ M1_0 into r1
    ldr.w  r7, [sp, #80 ] //Load ht24_0 into r7
    ldr.w r10, [sp, #88 ] //Load MASK1AND3XOR3 into r10
    eor    r1,  r1,  r7   //Exec M17_0 = M5_0 ^ ht24_0 into r1
    eor    r1,  r1,  r3   //Exec M21_0 = M17_0 ^ M15_0 into r1
    and    r3,  r2,  r1   //Exec XM34_00 = M22_0 & M21_0 into r3
    eor    r7,  r8,  r1   //Exec M27_0 = M20_0 ^ M21_0 into r7
    and    r0, r12,  r8   //Exec XM25_04 = MASK1 & M20_0 into r0
    eor    r0,  r0, r10   //Exec XM25_05 = XM25_04 ^ MASK1AND3XOR3 into r0
    eor    r0,  r0, r12   //Exec XM25_06 = XM25_05 ^ MASK1 into r0
    eor    r0,  r6,  r0   //Exec M25_0 = XM25_03 ^ XM25_06 into r0
    eor    r6,  r1,  r0   //Exec M26_0 = M21_0 ^ M25_0 into r6
    and   r10,  r9,  r6   //Exec XM30_00 = M24_0 & M26_0 into r10
    eor   r10, r10, r11   //Exec XM30_03 = XM30_00 ^ XM30_02 into r10
    and    r6, r14,  r6   //Exec XM30_04 = MASK2 & M26_0 into r6
    eor    r6, r10,  r6   //Exec M30_0 = XM30_03 ^ XM30_06 into r6
    ldr.w r11, [sp, #148] //Load MASK2AND3XOR3 into r11
    ldr.w r10, [sp, #12 ] //Load ht19_0 into r10
    eor    r6,  r6, r11   //Exec XM30_05 = XM30_04 ^ MASK2AND3XOR3 into r6
    eor    r6,  r6, r14   //Exec XM30_06 = XM30_05 ^ MASK2 into r6
    eor    r6,  r4,  r6   //Exec M39_0 = M23_0 ^ M30_0 into r6
    and   r10, r10,  r6   //Exec XM57_00 = ht19_0 & M39_0 into r10
    eor    r4,  r4,  r0   //Exec M28_0 = M23_0 ^ M25_0 into r4
    str.w r10, [sp, #92 ] //Store r10/XM57_00 on stack
    and   r10,  r7,  r4   //Exec XM29_00 = M27_0 & M28_0 into r10
    and    r4, r12,  r4   //Exec XM29_04 = MASK1 & M28_0 into r4
    ldr.w r11, [sp, #140] //Load MASK1AND2XOR2 into r11
    eor    r4,  r4, r11   //Exec XM29_05 = XM29_04 ^ MASK1AND2XOR2 into r4
    eor    r4,  r4, r12   //Exec XM29_06 = XM29_05 ^ MASK1 into r4
    str.w  r6, [sp, #80 ] //Store r6/M39_0 on stack
    eor    r6,  r0, r14   //Exec hm25_0 = M25_0 ^ MASK2 into r6
    eor    r6,  r7,  r6   //Exec M33_0 = M27_0 ^ hm25_0 into r6
    eor    r0,  r9,  r0   //Exec M36_0 = M24_0 ^ M25_0 into r0
    and    r2,  r2, r14   //Exec XM34_01 = M22_0 & MASK2 into r2
    eor    r2,  r2, r14   //Exec XM34_02 = XM34_01 ^ MASK2 into r2
    eor    r2,  r3,  r2   //Exec XM34_03 = XM34_00 ^ XM34_02 into r2
    and    r3,  r8, r14   //Exec XM31_01 = M20_0 & MASK2 into r3
    eor    r3,  r3, r14   //Exec XM31_02 = XM31_01 ^ MASK2 into r3
    eor    r3,  r5,  r3   //Exec XM31_03 = XM31_00 ^ XM31_02 into r3
    ldr.w  r5, [sp, #108] //Load XM31_06 into r5
    eor    r3,  r3,  r5   //Exec M31_0 = XM31_03 ^ XM31_06 into r3
    and    r5,  r3,  r7   //Exec XM32_00 = M31_0 & M27_0 into r5
    and    r3,  r3, r12   //Exec XM32_01 = M31_0 & MASK1 into r3
    eor    r3,  r3, r12   //Exec XM32_02 = XM32_01 ^ MASK1 into r3
    eor    r3,  r5,  r3   //Exec XM32_03 = XM32_00 ^ XM32_02 into r3
    and    r5, r12,  r1   //Exec XM34_04 = MASK1 & M21_0 into r5
    eor    r5,  r5, r11   //Exec XM34_05 = XM34_04 ^ MASK1AND2XOR2 into r5
    eor    r5,  r5, r12   //Exec XM34_06 = XM34_05 ^ MASK1 into r5
    eor    r2,  r2,  r5   //Exec M34_0 = XM34_03 ^ XM34_06 into r2
    and    r5,  r2,  r9   //Exec XM35_00 = M34_0 & M24_0 into r5
    and    r2,  r2, r14   //Exec XM35_01 = M34_0 & MASK2 into r2
    eor    r2,  r2, r14   //Exec XM35_02 = XM35_01 ^ MASK2 into r2
    eor    r2,  r5,  r2   //Exec XM35_03 = XM35_00 ^ XM35_02 into r2
    and    r5,  r7, r14   //Exec XM29_01 = M27_0 & MASK2 into r5
    eor    r5,  r5, r14   //Exec XM29_02 = XM29_01 ^ MASK2 into r5
    eor    r5, r10,  r5   //Exec XM29_03 = XM29_00 ^ XM29_02 into r5
    eor    r4,  r5,  r4   //Exec M29_0 = XM29_03 ^ XM29_06 into r4
    eor    r1,  r1,  r4   //Exec M37_0 = M21_0 ^ M29_0 into r1
    ldr.w  r4, [sp, #80 ] //Load M39_0 into r4
    ldr.w  r8, [sp, #56 ] //Load T15_0 into r8
    eor    r5,  r1,  r4   //Exec M42_0 = M37_0 ^ M39_0 into r5
    and   r10,  r8,  r5   //Exec XM52_00 = T15_0 & M42_0 into r10
    str.w r10, [sp, #108] //Store r10/XM52_00 on stack
    ldr.w r10, [sp, #4  ] //Load T1_0 into r10
    and   r10, r10,  r5   //Exec XM61_00 = T1_0 & M42_0 into r10
    str.w r10, [sp, #60 ] //Store r10/XM61_00 on stack
    ldr.w r10, [sp, #16 ] //Load T20_0 into r10
    ldr.w  r8, [sp, #48 ] //Load T17_0 into r8
    ldr.w  r4, [sp, #160] //Load MASK3 into r4
    and   r10,  r1, r10   //Exec XM60_00 = M37_0 & T20_0 into r10
    and    r8,  r1,  r8   //Exec XM51_00 = M37_0 & T17_0 into r8
    str.w  r5, [sp, #48 ] //Store r5/M42_0 on stack
    and    r7,  r4,  r7   //Exec XM32_04 = MASK3 & M27_0 into r7
    ldr.w  r5, [sp, #152] //Load MASK1AND3XOR1 into r5
    eor    r7,  r7,  r5   //Exec XM32_05 = XM32_04 ^ MASK1AND3XOR1 into r7
    eor    r7,  r7,  r4   //Exec XM32_06 = XM32_05 ^ MASK3 into r7
    eor    r3,  r3,  r7   //Exec M32_0 = XM32_03 ^ XM32_06 into r3
    eor    r3,  r3,  r6   //Exec M38_0 = M32_0 ^ M33_0 into r3
    eor    r6,  r1,  r3   //Exec M43_0 = M37_0 ^ M38_0 into r6
    ldr.w  r7, [sp, #28 ] //Load T16_0 into r7
    ldr.w  r5, [sp, #128] //Load T3_0 into r5
    and    r7,  r6,  r7   //Exec XM49_00 = M43_0 & T16_0 into r7
    and    r5,  r5,  r6   //Exec XM58_00 = T3_0 & M43_0 into r5
    str.w  r5, [sp, #44 ] //Store r5/XM58_00 on stack
    and    r5,  r6,  r4   //Exec XM49_01 = M43_0 & MASK3 into r5
    eor    r5,  r5,  r4   //Exec XM49_02 = XM49_01 ^ MASK3 into r5
    eor    r5,  r7,  r5   //Exec XM49_03 = XM49_00 ^ XM49_02 into r5
    str.w  r5, [sp, #16 ] //Store r5/XM49_03 on stack
    and    r6, r12,  r6   //Exec XM58_04 = MASK1 & M43_0 into r6
    eor    r6,  r6, r11   //Exec XM58_05 = XM58_04 ^ MASK1AND2XOR2 into r6
    eor    r6,  r6, r12   //Exec XM58_06 = XM58_05 ^ MASK1 into r6
    ldr.w  r7, [sp, #144] //Load T22_0 into r7
    ldr.w  r5, [sp, #64 ] //Load ht9_0 into r5
    str.w  r6, [sp, #36 ] //Store r6/XM58_06 on stack
    and    r6,  r3,  r7   //Exec XM59_00 = M38_0 & T22_0 into r6
    and    r5,  r5,  r3   //Exec XM50_00 = ht9_0 & M38_0 into r5
    str.w  r5, [sp, #8  ] //Store r5/XM50_00 on stack
    and    r5,  r1, r14   //Exec XM51_01 = M37_0 & MASK2 into r5
    eor    r5,  r5, r14   //Exec XM51_02 = XM51_01 ^ MASK2 into r5
    eor    r5,  r8,  r5   //Exec XM51_03 = XM51_00 ^ XM51_02 into r5
    ldr.w  r8, [sp, #40 ] //Load XM51_06 into r8
    eor    r5,  r5,  r8   //Exec M51_0 = XM51_03 ^ XM51_06 into r5
    and    r1,  r1, r14   //Exec XM60_01 = M37_0 & MASK2 into r1
    eor    r1,  r1, r14   //Exec XM60_02 = XM60_01 ^ MASK2 into r1
    eor    r1, r10,  r1   //Exec XM60_03 = XM60_00 ^ XM60_02 into r1
    ldr.w  r8, [sp, #20 ] //Load XM60_06 into r8
    eor    r1,  r1,  r8   //Exec M60_0 = XM60_03 ^ XM60_06 into r1
    and    r8, r12,  r9   //Exec XM35_04 = MASK1 & M24_0 into r8
    eor    r8,  r8, r11   //Exec XM35_05 = XM35_04 ^ MASK1AND2XOR2 into r8
    eor    r8,  r8, r12   //Exec XM35_06 = XM35_05 ^ MASK1 into r8
    eor    r2,  r2,  r8   //Exec M35_0 = XM35_03 ^ XM35_06 into r2
    eor    r0,  r2,  r0   //Exec M40_0 = M35_0 ^ M36_0 into r0
    eor    r2,  r3,  r0   //Exec M41_0 = M38_0 ^ M40_0 into r2
    ldr.w  r8, [sp, #48 ] //Load M42_0 into r8
    ldr.w r10, [sp, #24 ] //Load T27_0 into r10
    eor    r9,  r8,  r2   //Exec M45_0 = M42_0 ^ M41_0 into r9
    str.w  r1, [sp, #40 ] //Store r1/M60_0 on stack
    and    r1, r10,  r9   //Exec XM53_00 = T27_0 & M45_0 into r1
    str.w  r1, [sp, #20 ] //Store r1/XM53_00 on stack
    ldr.w  r1, [sp, #104] //Load T4_0 into r1
    ldr.w r10, [sp, #136] //Load MASK1AND2XOR1 into r10
    and    r1,  r1,  r9   //Exec XM62_00 = T4_0 & M45_0 into r1
    str.w  r1, [sp, #0  ] //Store r1/XM62_00 on stack
    and    r1, r14,  r9   //Exec XM53_04 = MASK2 & M45_0 into r1
    eor    r1,  r1, r10   //Exec XM53_05 = XM53_04 ^ MASK1AND2XOR1 into r1
    eor    r1,  r1, r14   //Exec XM53_06 = XM53_05 ^ MASK2 into r1
    and    r9, r14,  r9   //Exec XM62_04 = MASK2 & M45_0 into r9
    eor    r9,  r9, r10   //Exec XM62_05 = XM62_04 ^ MASK1AND2XOR1 into r9
    eor    r9,  r9, r14   //Exec XM62_06 = XM62_05 ^ MASK2 into r9
    str.w  r9, [sp, #136] //Store r9/XM62_06 on stack
    ldr.w r10, [sp, #68 ] //Load T10_0 into r10
    ldr.w  r9, [sp, #72 ] //Load XM54_02 into r9
    and   r10, r10,  r2   //Exec XM54_00 = T10_0 & M41_0 into r10
    eor    r9, r10,  r9   //Exec XM54_03 = XM54_00 ^ XM54_02 into r9
    ldr.w r10, [sp, #76 ] //Load T2_0 into r10
    str.w  r1, [sp, #76 ] //Store r1/XM53_06 on stack
    and   r10, r10,  r2   //Exec XM63_00 = T2_0 & M41_0 into r10
    ldr.w  r1, [sp, #132] //Load XM63_02 into r1
    ldr.w  r8, [sp, #148] //Load MASK2AND3XOR3 into r8
    eor    r1, r10,  r1   //Exec XM63_03 = XM63_00 ^ XM63_02 into r1
    and   r10, r14,  r2   //Exec XM54_04 = MASK2 & M41_0 into r10
    eor   r10, r10,  r8   //Exec XM54_05 = XM54_04 ^ MASK2AND3XOR3 into r10
    eor   r10, r10, r14   //Exec XM54_06 = XM54_05 ^ MASK2 into r10
    eor    r9,  r9, r10   //Exec M54_0 = XM54_03 ^ XM54_06 into r9
    and    r2, r12,  r2   //Exec XM63_04 = MASK1 & M41_0 into r2
    ldr.w r10, [sp, #88 ] //Load MASK1AND3XOR3 into r10
    eor    r2,  r2, r10   //Exec XM63_05 = XM63_04 ^ MASK1AND3XOR3 into r2
    eor    r2,  r2, r12   //Exec XM63_06 = XM63_05 ^ MASK1 into r2
    eor    r1,  r1,  r2   //Exec M63_0 = XM63_03 ^ XM63_06 into r1
    str.w  r9, [sp, #88 ] //Store r9/M54_0 on stack
    str.w  r1, [sp, #132] //Store r1/M63_0 on stack
    ldr.w  r2, [sp, #80 ] //Load M39_0 into r2
    ldr.w  r1, [sp, #52 ] //Load T6_0 into r1
    ldr.w  r9, [sp, #120] //Load ht13_0 into r9
    eor   r10,  r2,  r0   //Exec M44_0 = M39_0 ^ M40_0 into r10
    and    r1, r10,  r1   //Exec XM46_00 = M44_0 & T6_0 into r1
    and    r9, r10,  r9   //Exec XM55_00 = M44_0 & ht13_0 into r9
    and    r8, r10, r12   //Exec XM46_01 = M44_0 & MASK1 into r8
    eor    r8,  r8, r12   //Exec XM46_02 = XM46_01 ^ MASK1 into r8
    eor    r1,  r1,  r8   //Exec XM46_03 = XM46_00 ^ XM46_02 into r1
    ldr.w  r8, [sp, #124] //Load XM46_06 into r8
    eor    r1,  r1,  r8   //Exec M46_0 = XM46_03 ^ XM46_06 into r1
    and    r8, r10, r14   //Exec XM55_01 = M44_0 & MASK2 into r8
    str.w  r1, [sp, #124] //Store r1/M46_0 on stack
    eor    r8,  r8, r14   //Exec XM55_02 = XM55_01 ^ MASK2 into r8
    eor    r8,  r9,  r8   //Exec XM55_03 = XM55_00 ^ XM55_02 into r8
    ldr.w  r9, [sp, #116] //Load XM55_06 into r9
    eor    r8,  r8,  r9   //Exec M55_0 = XM55_03 ^ XM55_06 into r8
    ldr.w  r9, [sp, #96 ] //Load T23_0 into r9
    ldr.w  r1, [sp, #100] //Load T8_0 into r1
    and   r10,  r0,  r9   //Exec XM56_00 = M40_0 & T23_0 into r10
    and    r1,  r0,  r1   //Exec XM47_00 = M40_0 & T8_0 into r1
    str.w  r8, [sp, #120] //Store r8/M55_0 on stack
    and    r8,  r0,  r4   //Exec XM47_01 = M40_0 & MASK3 into r8
    eor    r8,  r8,  r4   //Exec XM47_02 = XM47_01 ^ MASK3 into r8
    eor    r1,  r1,  r8   //Exec XM47_03 = XM47_00 ^ XM47_02 into r1
    and    r0,  r0,  r4   //Exec XM56_01 = M40_0 & MASK3 into r0
    eor    r0,  r0,  r4   //Exec XM56_02 = XM56_01 ^ MASK3 into r0
    eor    r0, r10,  r0   //Exec XM56_03 = XM56_00 ^ XM56_02 into r0
    and    r8,  r4,  r3   //Exec XM50_04 = MASK3 & M38_0 into r8
    ldr.w r10, [sp, #152] //Load MASK1AND3XOR1 into r10
    eor    r8,  r8, r10   //Exec XM50_05 = XM50_04 ^ MASK1AND3XOR1 into r8
    eor    r8,  r8,  r4   //Exec XM50_06 = XM50_05 ^ MASK3 into r8
    and    r3,  r3, r14   //Exec XM59_01 = M38_0 & MASK2 into r3
    eor    r3,  r3, r14   //Exec XM59_02 = XM59_01 ^ MASK2 into r3
    eor    r3,  r6,  r3   //Exec XM59_03 = XM59_00 ^ XM59_02 into r3
    and    r6, r12,  r7   //Exec XM59_04 = MASK1 & T22_0 into r6
    eor    r6,  r6, r11   //Exec XM59_05 = XM59_04 ^ MASK1AND2XOR2 into r6
    eor    r6,  r6, r12   //Exec XM59_06 = XM59_05 ^ MASK1 into r6
    eor    r3,  r3,  r6   //Exec M59_0 = XM59_03 ^ XM59_06 into r3
    eor    r3,  r5,  r3   //Exec L8_0 = M51_0 ^ M59_0 into r3
    ldr.w  r6, [sp, #64 ] //Load ht9_0 into r6
    ldr.w  r7, [sp, #8  ] //Load XM50_00 into r7
    and    r6,  r6, r12   //Exec XM50_01 = ht9_0 & MASK1 into r6
    eor    r6,  r6, r12   //Exec XM50_02 = XM50_01 ^ MASK1 into r6
    eor    r6,  r7,  r6   //Exec XM50_03 = XM50_00 ^ XM50_02 into r6
    eor    r6,  r6,  r8   //Exec M50_0 = XM50_03 ^ XM50_06 into r6
    ldr.w  r7, [sp, #12 ] //Load ht19_0 into r7
    ldr.w  r8, [sp, #92 ] //Load XM57_00 into r8
    and    r7,  r7, r12   //Exec XM57_01 = ht19_0 & MASK1 into r7
    eor    r7,  r7, r12   //Exec XM57_02 = XM57_01 ^ MASK1 into r7
    eor    r7,  r8,  r7   //Exec XM57_03 = XM57_00 ^ XM57_02 into r7
    ldr.w  r8, [sp, #32 ] //Load i0 into r8
    str.w  r5, [sp, #144] //Store r5/M51_0 on stack
    and    r5,  r2,  r8   //Exec XM48_00 = M39_0 & i0 into r5
    and    r8,  r2, r14   //Exec XM48_01 = M39_0 & MASK2 into r8
    eor    r8,  r8, r14   //Exec XM48_02 = XM48_01 ^ MASK2 into r8
    eor    r5,  r5,  r8   //Exec XM48_03 = XM48_00 ^ XM48_02 into r5
    str.w  r5, [sp, #116] //Store r5/XM48_03 on stack
    and    r2,  r4,  r2   //Exec XM57_04 = MASK3 & M39_0 into r2
    eor    r2,  r2, r10   //Exec XM57_05 = XM57_04 ^ MASK1AND3XOR1 into r2
    eor    r2,  r2,  r4   //Exec XM57_06 = XM57_05 ^ MASK3 into r2
    eor    r2,  r7,  r2   //Exec M57_0 = XM57_03 ^ XM57_06 into r2
    and    r7, r14,  r9   //Exec XM56_04 = MASK2 & T23_0 into r7
    ldr.w  r8, [sp, #148] //Load MASK2AND3XOR3 into r8
    ldr.w  r9, [sp, #120] //Load M55_0 into r9
    ldr.w  r5, [sp, #100] //Load T8_0 into r5
    eor    r7,  r7,  r8   //Exec XM56_05 = XM56_04 ^ MASK2AND3XOR3 into r7
    eor    r7,  r7, r14   //Exec XM56_06 = XM56_05 ^ MASK2 into r7
    eor    r0,  r0,  r7   //Exec M56_0 = XM56_03 ^ XM56_06 into r0
    eor    r7,  r6,  r0   //Exec L1_0 = M50_0 ^ M56_0 into r7
    str.w  r6, [sp, #100] //Store r6/M50_0 on stack
    eor    r2,  r2,  r7   //Exec L17_0 = M57_0 ^ L1_0 into r2
    str.w  r2, [sp, #152] //Store r2/L17_0 on stack
    eor   r10,  r9,  r7   //Exec L15_0 = M55_0 ^ L1_0 into r10
    eor    r2,  r7, r14   //Exec ml1_0 = L1_0 ^ MASK2 into r2
    and    r5, r14,  r5   //Exec XM47_04 = MASK2 & T8_0 into r5
    eor    r5,  r5,  r8   //Exec XM47_05 = XM47_04 ^ MASK2AND3XOR3 into r5
    eor    r5,  r5, r14   //Exec XM47_06 = XM47_05 ^ MASK2 into r5
    eor    r1,  r1,  r5   //Exec M47_0 = XM47_03 ^ XM47_06 into r1
    eor    r1,  r1,  r9   //Exec L3_0 = M47_0 ^ M55_0 into r1
    ldr.w  r5, [sp, #124] //Load M46_0 into r5
    eor    r9,  r5,  r1   //Exec L7_0 = M46_0 ^ L3_0 into r9
    str.w  r1, [sp, #120] //Store r1/L3_0 on stack
    eor    r7,  r7,  r9   //Exec L21_0 = L1_0 ^ L7_0 into r7
    eor    r7,  r7, r12   //Exec hl21_0 = L21_0 ^ MASK1 into r7
    ldr.w  r1, [sp, #48 ] //Load M42_0 into r1
    and    r5, r12,  r1   //Exec XM52_04 = MASK1 & M42_0 into r5
    eor    r5,  r5, r11   //Exec XM52_05 = XM52_04 ^ MASK1AND2XOR2 into r5
    eor    r5,  r5, r12   //Exec XM52_06 = XM52_05 ^ MASK1 into r5
    and    r1,  r4,  r1   //Exec XM61_04 = MASK3 & M42_0 into r1
    ldr.w r11, [sp, #84 ] //Load MASK2AND3XOR2 into r11
    eor    r1,  r1, r11   //Exec XM61_05 = XM61_04 ^ MASK2AND3XOR2 into r1
    eor    r1,  r1,  r4   //Exec XM61_06 = XM61_05 ^ MASK3 into r1
    ldr.w r11, [sp, #56 ] //Load T15_0 into r11
    ldr.w  r6, [sp, #108] //Load XM52_00 into r6
    and   r11, r11, r14   //Exec XM52_01 = T15_0 & MASK2 into r11
    eor   r11, r11, r14   //Exec XM52_02 = XM52_01 ^ MASK2 into r11
    eor    r6,  r6, r11   //Exec XM52_03 = XM52_00 ^ XM52_02 into r6
    eor    r5,  r6,  r5   //Exec M52_0 = XM52_03 ^ XM52_06 into r5
    ldr.w  r6, [sp, #4  ] //Load T1_0 into r6
    ldr.w r11, [sp, #60 ] //Load XM61_00 into r11
    and    r6,  r6, r14   //Exec XM61_01 = T1_0 & MASK2 into r6
    eor    r6,  r6, r14   //Exec XM61_02 = XM61_01 ^ MASK2 into r6
    eor    r6, r11,  r6   //Exec XM61_03 = XM61_00 ^ XM61_02 into r6
    eor    r1,  r6,  r1   //Exec M61_0 = XM61_03 ^ XM61_06 into r1
    eor    r6,  r5,  r1   //Exec L14_0 = M52_0 ^ M61_0 into r6
    ldr.w r11, [sp, #28 ] //Load T16_0 into r11
    and   r11, r14, r11   //Exec XM49_04 = MASK2 & T16_0 into r11
    str.w  r6, [sp, #148] //Store r6/L14_0 on stack
    eor    r8, r11,  r8   //Exec XM49_05 = XM49_04 ^ MASK2AND3XOR3 into r8
    eor    r8,  r8, r14   //Exec XM49_06 = XM49_05 ^ MASK2 into r8
    ldr.w r11, [sp, #16 ] //Load XM49_03 into r11
    eor    r8, r11,  r8   //Exec M49_0 = XM49_03 ^ XM49_06 into r8
    eor    r8,  r8,  r1   //Exec L5_0 = M49_0 ^ M61_0 into r8
    ldr.w r11, [sp, #128] //Load T3_0 into r11
    and   r11, r11, r14   //Exec XM58_01 = T3_0 & MASK2 into r11
    eor   r11, r11, r14   //Exec XM58_02 = XM58_01 ^ MASK2 into r11
    ldr.w  r6, [sp, #44 ] //Load XM58_00 into r6
    eor    r6,  r6, r11   //Exec XM58_03 = XM58_00 ^ XM58_02 into r6
    ldr.w r11, [sp, #36 ] //Load XM58_06 into r11
    eor    r6,  r6, r11   //Exec M58_0 = XM58_03 ^ XM58_06 into r6
    eor   r11,  r6,  r3   //Exec L18_0 = M58_0 ^ L8_0 into r11
    str.w r11, [sp, #128] //Store r11/L18_0 on stack
    ldr.w r11, [sp, #88 ] //Load M54_0 into r11
    eor    r6, r11,  r6   //Exec L4_0 = M54_0 ^ M58_0 into r6
    ldr.w r11, [sp, #132] //Load M63_0 into r11
    eor   r11, r11,  r6   //Exec L19_0 = M63_0 ^ L4_0 into r11
    str.w r11, [sp, #132] //Store r11/L19_0 on stack
    ldr.w r11, [sp, #24 ] //Load T27_0 into r11
    ldr.w r14, [sp, #20 ] //Load XM53_00 into r14
    and   r11, r11, r12   //Exec XM53_01 = T27_0 & MASK1 into r11
    eor   r11, r11, r12   //Exec XM53_02 = XM53_01 ^ MASK1 into r11
    eor   r11, r14, r11   //Exec XM53_03 = XM53_00 ^ XM53_02 into r11
    ldr.w r14, [sp, #76 ] //Load XM53_06 into r14
    eor   r11, r11, r14   //Exec M53_0 = XM53_03 ^ XM53_06 into r11
    eor    r6, r11,  r6   //Exec L10_0 = M53_0 ^ L4_0 into r6
    eor    r3,  r3,  r6   //Exec L27_0 = L8_0 ^ L10_0 into r3
    eor    r5,  r5, r11   //Exec L9_0 = M52_0 ^ M53_0 into r5
    eor    r9,  r9,  r5   //Exec L26_0 = L7_0 ^ L9_0 into r9
    eor    r5, r10,  r5   //Exec L24_0 = L15_0 ^ L9_0 into r5
    ldr.w r10, [sp, #104] //Load T4_0 into r10
    ldr.w r11, [sp, #0  ] //Load XM62_00 into r11
    and   r10, r10, r12   //Exec XM62_01 = T4_0 & MASK1 into r10
    eor   r10, r10, r12   //Exec XM62_02 = XM62_01 ^ MASK1 into r10
    eor   r10, r11, r10   //Exec XM62_03 = XM62_00 ^ XM62_02 into r10
    ldr.w r11, [sp, #136] //Load XM62_06 into r11
    eor   r10, r10, r11   //Exec M62_0 = XM62_03 ^ XM62_06 into r10
    eor    r8, r10,  r8   //Exec L6_0 = M62_0 ^ L5_0 into r8
    eor    r5,  r8,  r5   //Exec o7 = L6_0 ^ L24_0 into r5
    eor    r6,  r8,  r6   //Exec L25_0 = L6_0 ^ L10_0 into r6
    eor    r7,  r8,  r7   //Exec o4 = L6_0 ^ hl21_0 into r7
    eor    r1,  r1, r10   //Exec L0_0 = M61_0 ^ M62_0 into r1
    eor    r2,  r1,  r2   //Exec L20_0 = L0_0 ^ ml1_0 into r2
    eor    r0,  r0,  r1   //Exec L16_0 = M56_0 ^ L0_0 into r0
    eor    r0,  r0,  r9   //Exec Y1_0 = L16_0 ^ L26_0 ^ 1 into r0
    eor    r0,  r0,  r4   //Exec o6 = Y1_0 ^ MASK3 into r0
    ldr.w  r9, [sp, #100] //Load M50_0 into r9
    eor    r1,  r9,  r1   //Exec L13_0 = M50_0 ^ L0_0 into r1
    eor    r1,  r1,  r3   //Exec Y6_0 = L13_0 ^ L27_0 ^ 1 into r1
    ldr.w  r3, [sp, #164] //Load MASK2 into r3
    ldr.w  r9, [sp, #32 ] //Load i0 into r9
    ldr.w r10, [sp, #140] //Load MASK1AND2XOR2 into r10
    eor    r1,  r1,  r3   //Exec o1 = Y6_0 ^ MASK2 into r1
    and    r9, r12,  r9   //Exec XM48_04 = MASK1 & i0 into r9
    eor    r9,  r9, r10   //Exec XM48_05 = XM48_04 ^ MASK1AND2XOR2 into r9
    eor    r9,  r9, r12   //Exec XM48_06 = XM48_05 ^ MASK1 into r9
    ldr.w r10, [sp, #116] //Load XM48_03 into r10
    eor    r9, r10,  r9   //Exec M48_0 = XM48_03 ^ XM48_06 into r9
    ldr.w r10, [sp, #124] //Load M46_0 into r10
    ldr.w r11, [sp, #128] //Load L18_0 into r11
    eor   r10, r10,  r9   //Exec L2_0 = M46_0 ^ M48_0 into r10
    eor   r11, r11, r10   //Exec L23_0 = L18_0 ^ L2_0 into r11
    eor    r8,  r8, r11   //Exec o0 = L6_0 ^ L23_0 ^ 1 into r8
    ldr.w r11, [sp, #40 ] //Load M60_0 into r11
    eor   r10, r11, r10   //Exec L11_0 = M60_0 ^ L2_0 into r10
    ldr.w r11, [sp, #148] //Load L14_0 into r11
    ldr.w r12, [sp, #132] //Load L19_0 into r12
    eor   r11, r10, r11   //Exec L28_0 = L11_0 ^ L14_0 into r11
    eor   r11, r12, r11   //Exec Y2_0 = L19_0 ^ L28_0 ^ 1 into r11
    eor    r4, r11,  r4   //Exec o5 = Y2_0 ^ MASK3 into r4
    ldr.w r11, [sp, #152] //Load L17_0 into r11
    eor   r10, r10, r11   //Exec L29_0 = L11_0 ^ L17_0 into r10
    eor    r6,  r6, r10   //Exec Y5_0 = L25_0 ^ L29_0 into r6
    eor    r3,  r6,  r3   //Exec o2 = Y5_0 ^ MASK2 into r3
    ldr.w  r6, [sp, #144] //Load M51_0 into r6
    eor    r6,  r9,  r6   //Exec L12_0 = M48_0 ^ M51_0 into r6
    ldr.w  r9, [sp, #120] //Load L3_0 into r9
    eor    r6,  r9,  r6   //Exec L22_0 = L3_0 ^ L12_0 into r6
    eor    r2,  r2,  r6   //Exec o3 = L20_0 ^ L22_0 into r2

